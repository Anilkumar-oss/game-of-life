pipeline {
     agent {label 'slave'}
    tools { 
        maven 'maven' 
       }
stages { 
   stage('Preparation') { 
     steps {
 //for display purposes

    //   Get some code from a GitHub repository

      git 'https://github.com/anilkumarpuli/game-of-life.git'

      // Get the Maven tool.
     
 // ** NOTE: This 'M3' Maven tool must be configured
 
     // **       in the global configuration.   
     }
   }
  stage('Build') {
       steps {
      //  Run the maven build

     // if (isUnix()) {
        sh 'mvn -Dmaven.test.failure.ignore=true install'
      //} 
      //else {
        //bat(/"${mvnHome}\bin\mvn" -Dmaven.test.failure.ignore clean package/)
      // }
}
   }
   stage('Unit Test Results') {
      steps {
      junit '**/target/surefire-reports/TEST-*.xml'
      
      }
 }
  stage('Sonarqube') {
    environment {
       scannerHome = tool 'sonar'
    }
    steps {
        withSonarQubeEnv('sonar') {
            sh "${scannerHome}/bin/sonar-scanner"
          }
        
          }
         }
     stage('Artifact upload to nexus') {
      steps {
    nexusArtifactUploader artifacts: [[artifactId: 'new', classifier: '', file: '/home/slave1/workspace/gameoflife/gameoflife-web/target/gameoflife.war', type: 'war']], credentialsId: 'nexus', groupId: 'nexus-repo', nexusUrl: '18.221.179.12:8081/nexus', nexusVersion: 'nexus2', protocol: 'http', repository: 'vprofile', version: '$BUILD_ID'   
      }
     }
      //stage('upload to tomcat')
      //{ 
      //steps{
// deploy adapters: [tomcat8(credentialsId: 'tomcat1', path: '', url: 'http://18.191.211.250:8080')], contextPath: 'gameoflife-v1', war: '/home/slave1/workspace/gameoflife/gameoflife-web/target/gameoflife.war'    
  // }
    //  }
   stage('Build and tag')
        {
      steps{
        sh 'docker build -t gameoflife-image:$BUILD_NUMBER .'
        sh "docker tag gameoflife-image:$BUILD_NUMBER docker.io/anilkumblepuli/gameoflife-image:$BUILD_NUMBER"
      }
      }
     stage('push to Hub')
      {
     steps{
withCredentials([string(credentialsId: 'docker-jub', variable: 'docker-hub')]) 
{
    sh "docker login -u raaghavendra09 -p ${docker-hub}"
    sh" docker push docker.io/raaghavendra09/gameoflife-image:$BUILD_NUMBER"
    }
      }     
        }
      }
       post{
        success {
            archiveArtifacts 'gameoflife-web/target/*.war'
        }
        failure {
            mail to:"anildevops.r@gmail.com", subject:"FAILURE: ${currentBuild.fullDisplayName}", body: "Build failed"
        }
    }       
}

