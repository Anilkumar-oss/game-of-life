pipeline {
    agent {label 'slave2'}
    tools { 
        maven 'maven' 
      
    }
stages { 
     
 stage('Preparation') { 
     steps {
 //for display purposes

      // Get some code from a GitHub repository

      git 'https://github.com/raknas999/game-of-life.git'

      // Get the Maven tool.
     
 // ** NOTE: This 'M3' Maven tool must be configured
 
     // **       in the global configuration.   
     }
   }

   stage('Build') {
       steps {
       // Run the maven build

      //if (isUnix()) {
         sh 'mvn -Dmaven.test.failure.ignore=true install'
      //} 
      //else {
      //   bat(/"${mvnHome}\bin\mvn" -Dmaven.test.failure.ignore clean package/)
       }
//}
   }
 
  stage('Unit Test Results') {
      steps {
      junit '**/target/surefire-reports/TEST-*.xml'
      
      }
 }
 //stage('Sonarqube') {
   // environment {
     //   scannerHome = tool 'sonar'
    //}
    //steps {
      //  withSonarQubeEnv('sonar') {
        //    sh "${scannerHome}/bin/sonar-scanner"
        //}
        
    //}
//}
     stage('Artifact upload to nexus') {
      steps {
nexusArtifactUploader artifacts: [[artifactId: 'mavenartifactory', classifier: 'anilkumar', file: '**/*.war', type: 'war']], credentialsId: 'nexu-id', groupId: 'meven_id', nexusUrl: '18.219.80.93:8081', nexusVersion: 'nexus3', protocol: 'http', repository: 'mavenrepo', version: '$BUILD_ID'      }
 }
    stage('Build and Push Docker Image') {
      steps {
        sh label: '', script: '''docker build -t gameoflife-image:$BUILD_NUMBER .
                                 docker tag gameoflife-image:$BUILD_NUMBER docker.io/raknas000/gameoflife-image:$BUILD_NUMBER
                                 docker push docker.io/raknas000/gameoflife-image:$BUILD_NUMBER'''
      }
 }
}
post {
        success {
            archiveArtifacts 'gameoflife-web/target/*.war'
        }
        failure {
            mail to:"sankar.dadi@qentelli.com", subject:"FAILURE: ${currentBuild.fullDisplayName}", body: "Build failed"
        }
    }       
}
